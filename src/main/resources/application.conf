calculationDatabase {
  dataSourceClass = "slick.jdbc.DatabaseUrlDataSource"
  connectionPool = disabled
  properties = {
    driver = "org.postgresql.Driver"
    url = "jdbc:postgresql://localhost:5432/postgres"
  }
}

akka {
  log-dead-letters-during-shutdown = off
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  # Akka HTTP settings
  # https://doc.akka.io/docs/akka-http/current/configuration.html
  http {
    server {
      # Enables/disables the logging of warning messages in case an incoming
      # message (request or response) contains an HTTP header which cannot be
      # parsed
      parsing.illegal-header-warnings = off

      # Limits the maximum time it may take to produce an HttpResponse
      request-timeout = 33 seconds
    }

    host-connection-pool {
      # The maximum number of parallel connections that a connection pool to a
      # single host endpoint is allowed to establish. Must be greater than zero.
      max-connections = 256

      # The minimum number of parallel connections that a pool should keep alive ("hot").
      # If the number of connections is falling below the given threshold, new ones are being spawned.
      # You can use this setting to build a hot pool of "always on" connections.
      # Default is 0, meaning there might be no active connection at given moment.
      # Keep in mind that `min-connections` should be smaller than `max-connections` or equal
      min-connections = 2

      # The time after which an idle connection pool (without pending requests)
      # will automatically terminate itself. Set to `infinite` to completely disable idle timeouts.
      idle-timeout = 300 s

      # The maximum number of open requests accepted into the pool across all materializations of any of its client flows
      max-open-requests = 1024
    }
  }
}
